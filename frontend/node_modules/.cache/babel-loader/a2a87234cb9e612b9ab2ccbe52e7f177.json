{"ast":null,"code":"var _jsxFileName = \"/Users/heather/Development/code/eikona/frontend/src/components/Matrix.js\";\nimport React, { Component } from 'react'; //import learnSymbol from './data.js'\n\nimport Cell from './Cell.js';\nimport ColorSelector from './ColorSelector.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Matrix extends Component {\n  constructor() {\n    super();\n\n    this.setSelectedColor = newColor => {\n      this.setState({\n        selectedColor: newColor\n      });\n    };\n\n    this.genRow = vals => vals.map((val, idx) => /*#__PURE__*/_jsxDEV(Cell, {\n      color: val,\n      selectedColor: this.state.selectedColor\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 28\n    }, this));\n\n    this.genMatrix = () => this.props.values.map((rowVals, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: this.genRow(rowVals)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 45\n    }, this));\n\n    this.state = {\n      selectedColor: '#FFF'\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(ColorSelector, {\n        setSelectedColor: this.setSelectedColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"matrix\",\n        children: this.genMatrix()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nMatrix.defaultProps = {\n  values: learnSymbol\n};","map":{"version":3,"sources":["/Users/heather/Development/code/eikona/frontend/src/components/Matrix.js"],"names":["React","Component","Cell","ColorSelector","Matrix","constructor","setSelectedColor","newColor","setState","selectedColor","genRow","vals","map","val","idx","state","genMatrix","props","values","rowVals","render","defaultProps","learnSymbol"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;AAEA,eAAe,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAE5CI,EAAAA,WAAW,GAAG;AACZ;;AADY,SAOdC,gBAPc,GAOMC,QAAD,IAAc;AAC/B,WAAKC,QAAL,CAAc;AACZC,QAAAA,aAAa,EAAEF;AADH,OAAd;AAGD,KAXa;;AAAA,SAadG,MAbc,GAaJC,IAAD,IACPA,IAAI,CAACC,GAAL,CAAS,CAACC,GAAD,EAAMC,GAAN,kBAAc,QAAC,IAAD;AAAgB,MAAA,KAAK,EAAED,GAAvB;AAA4B,MAAA,aAAa,EAAE,KAAKE,KAAL,CAAWN;AAAtD,OAAWK,GAAX;AAAA;AAAA;AAAA;AAAA,YAAvB,CAdY;;AAAA,SAiBdE,SAjBc,GAiBF,MACV,KAAKC,KAAL,CAAWC,MAAX,CAAkBN,GAAlB,CAAsB,CAACO,OAAD,EAAUL,GAAV,kBAAkB;AAAe,MAAA,SAAS,EAAC,KAAzB;AAAA,gBAAgC,KAAKJ,MAAL,CAAYS,OAAZ;AAAhC,OAAUL,GAAV;AAAA;AAAA;AAAA;AAAA,YAAxC,CAlBY;;AAEZ,SAAKC,KAAL,GAAa;AACXN,MAAAA,aAAa,EAAE;AADJ,KAAb;AAGD;;AAgBDW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAC,KAAR;AAAA,8BACE,QAAC,aAAD;AAAe,QAAA,gBAAgB,EAAE,KAAKd;AAAtC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,EAAE,EAAC,QAAR;AAAA,kBACG,KAAKU,SAAL;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAhC2C;AAmC9CZ,MAAM,CAACiB,YAAP,GAAsB;AACpBH,EAAAA,MAAM,EAAEI;AADY,CAAtB","sourcesContent":["import React, { Component } from 'react';\n//import learnSymbol from './data.js'\nimport Cell from './Cell.js'\nimport ColorSelector from './ColorSelector.js'\n\nexport default class Matrix extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      selectedColor: '#FFF'\n    }\n  }\n\n  setSelectedColor = (newColor) => {\n    this.setState({\n      selectedColor: newColor\n    })\n  }\n\n  genRow = (vals) => (\n    vals.map((val, idx) => <Cell key={idx} color={val} selectedColor={this.state.selectedColor} />)\n  )\n\n  genMatrix = () => (\n    this.props.values.map((rowVals, idx) => <div key={idx} className=\"row\">{this.genRow(rowVals)}</div>)\n  )\n\n  render() {\n    return (\n      <div id=\"app\">\n        <ColorSelector setSelectedColor={this.setSelectedColor} />\n        <div id=\"matrix\">\n          {this.genMatrix()}\n        </div>\n      </div>\n    )\n  }\n}\n\nMatrix.defaultProps = {\n  values: learnSymbol\n}\n"]},"metadata":{},"sourceType":"module"}