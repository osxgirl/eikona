{"ast":null,"code":"var _jsxFileName = \"/Users/heather/Development/code/eikona/frontend/src/containers/MessagesContainer.js\";\nimport MessageCard from '../components/MessageCard';\nimport React, { Component } from 'react';\nimport MessageForm from '../components/MessageForm';\nimport { connect } from 'react-redux';\nimport { fetchToys } from '../actions/toyActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:3000/messages\";\n\nclass MessagesContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.addMessage = messageData => {\n      this.setState((prevState, prevProps) => {\n        return {\n          messages: [...prevState.messages, messageData]\n        };\n      });\n    };\n\n    this.increaseLikes = id => {\n      const toy = this.state.toys.find(t => id === t.id);\n      const configObj = {\n        method: 'PATCH',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accepts\": \"application/json\"\n        },\n        body: JSON.stringify({\n          likes: toy.likes + 1\n        })\n      };\n      fetch(`${url}/${id}`, configObj).then(res => res.json()).then(json => {\n        this.setState(prevState => {\n          const idx = prevState.toys.findIndex(t => json.id === t.id);\n          return {\n            toys: [...prevState.toys.slice(0, idx), json, ...prevState.toys.slice(idx + 1)]\n          };\n        });\n      });\n    };\n  }\n\n  makeMessageCards() {\n    return this.props.messages.map(message => /*#__PURE__*/_jsxDEV(MessageCard, {\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 51\n    }, this));\n  }\n\n  componentDidMount() {\n    // where you make your fetch requests\n    console.log(\"A\");\n    this.props.fetchToys(); //async stuff happening here\n\n    console.log(\"D\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"toy-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(ToyForm, {\n          addToy: this.addToy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), this.props.loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"LOADING....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 38\n      }, this) : this.makeToyCards()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/heather/Development/code/eikona/frontend/src/containers/MessagesContainer.js"],"names":["MessageCard","React","Component","MessageForm","connect","fetchToys","url","MessagesContainer","addMessage","messageData","setState","prevState","prevProps","messages","increaseLikes","id","toy","state","toys","find","t","configObj","method","headers","body","JSON","stringify","likes","fetch","then","res","json","idx","findIndex","slice","makeMessageCards","props","map","message","componentDidMount","console","log","render","addToy","loading","makeToyCards"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,2BAAxB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAyB,uBAAzB;;AAEA,MAAMC,GAAG,GAAE,gCAAX;;AAEA,MAAMC,iBAAN,SAAgCN,KAAK,CAACC,SAAtC,CAA+C;AAAA;AAAA;;AAAA,SAC3CM,UAD2C,GAC7BC,WAAD,IAAiB;AAC3B,WAAKC,QAAL,CAAc,CAACC,SAAD,EAAYC,SAAZ,KAA2B;AACpC,eAAO;AACHC,UAAAA,QAAQ,EAAE,CAAC,GAAGF,SAAS,CAACE,QAAd,EAAwBJ,WAAxB;AADP,SAAP;AAGH,OAJF;AAKF,KAP0C;;AAAA,SAY3CK,aAZ2C,GAY1BC,EAAD,IAAQ;AACpB,YAAMC,GAAG,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,IAAhB,CAAsBC,CAAD,IAAML,EAAE,KAAKK,CAAC,CAACL,EAApC,CAAZ;AACA,YAAMM,SAAS,GAAG;AACdC,QAAAA,MAAM,EAAE,OADM;AAEdC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,qBAAW;AAFN,SAFK;AAMdC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,UAAAA,KAAK,EAAEX,GAAG,CAACW,KAAJ,GAAY;AAApB,SAAf;AANQ,OAAlB;AASAC,MAAAA,KAAK,CAAE,GAAEtB,GAAI,IAAGS,EAAG,EAAd,EAAiBM,SAAjB,CAAL,CACCQ,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEME,IAAI,IAAI;AACV,aAAKrB,QAAL,CAAeC,SAAD,IAAe;AACxB,gBAAMqB,GAAG,GAAGrB,SAAS,CAACO,IAAV,CAAee,SAAf,CAA0Bb,CAAD,IAAMW,IAAI,CAAChB,EAAL,KAAYK,CAAC,CAACL,EAA7C,CAAZ;AAED,iBAAO;AACHG,YAAAA,IAAI,EAAE,CAAC,GAAGP,SAAS,CAACO,IAAV,CAAegB,KAAf,CAAqB,CAArB,EAAuBF,GAAvB,CAAJ,EAAiCD,IAAjC,EAAuC,GAAGpB,SAAS,CAACO,IAAV,CAAegB,KAAf,CAAqBF,GAAG,GAAG,CAA3B,CAA1C;AADH,WAAP;AAGH,SAND;AAOH,OAVD;AAYH,KAnC0C;AAAA;;AAQ3CG,EAAAA,gBAAgB,GAAE;AACd,WAAO,KAAKC,KAAL,CAAWvB,QAAX,CAAoBwB,GAApB,CAAwBC,OAAO,iBAAI,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA,YAAnC,CAAP;AACH;;AA2BDC,EAAAA,iBAAiB,GAAE;AACjB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,SAAKL,KAAL,CAAW/B,SAAX,GAJiB,CAIM;;AACvBmC,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD;;AAKDC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,EAAE,EAAC,eAAR;AAAA,8BAEI;AAAA,gCACI,QAAC,OAAD;AAAS,UAAA,MAAM,EAAE,KAAKC;AAAtB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAOI,KAAKP,KAAL,CAAWQ,OAAX,gBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAArB,GAA4C,KAAKC,YAAL,EAPhD;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AA5D0C","sourcesContent":["import MessageCard from '../components/MessageCard'\nimport React, { Component } from 'react';\nimport MessageForm from '../components/MessageForm'\nimport {connect} from 'react-redux'\nimport {fetchToys}  from '../actions/toyActions'\n\nconst url =\"http://localhost:3000/messages\"\n\nclass MessagesContainer extends React.Component{\n    addMessage = (messageData) => {\n       this.setState((prevState, prevProps ) => {\n            return {\n                messages: [...prevState.messages, messageData]\n            }\n        })\n    }\n    makeMessageCards(){\n        return this.props.messages.map(message => <MessageCard message={message} />)\n    }\n\n    increaseLikes = (id) => {\n        const toy = this.state.toys.find((t)=> id === t.id)\n        const configObj = {\n            method: 'PATCH',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accepts\": \"application/json\"\n            },\n            body: JSON.stringify({likes: toy.likes + 1})\n        }\n\n        fetch(`${url}/${id}`, configObj)\n        .then(res => res.json())\n        .then(json => {\n            this.setState((prevState) => {\n                 const idx = prevState.toys.findIndex((t)=> json.id === t.id)\n\n                return {\n                    toys: [...prevState.toys.slice(0,idx), json, ...prevState.toys.slice(idx + 1)]\n                }\n            })\n        })\n      \n    }\n\n    componentDidMount(){\n      // where you make your fetch requests\n\n      console.log(\"A\")\n      this.props.fetchToys() //async stuff happening here\n      console.log(\"D\")\n    }\n\n   \n\n\n    render(){\n        return(\n            <div id=\"toy-container\">\n        \n                <div>\n                    <ToyForm addToy={this.addToy}/>\n                    <br></br>\n                </div>\n                \n               {this.props.loading ? <h1>LOADING....</h1> : this.makeToyCards()}\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}