{"ast":null,"code":"var _jsxFileName = \"/Users/heather/Development/code/eikona/frontend/src/containers/MessagesContainer.js\";\nimport MessageCard from '../components/MessageCard';\nimport React from 'react';\nimport MessageForm from '../components/MessageForm';\nimport { connect } from 'react-redux';\nimport { fetchMessages } from '../actions/messageActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:3000/messages\";\n\nclass MessagesContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.addMessage = messageData => {\n      this.setState((prevState, prevProps) => {\n        return {\n          message: [...prevState.messages, messageData]\n        };\n      });\n    };\n\n    this.increaseMessages = id => {\n      const message = this.state.mewssages.find(t => id === t.id);\n      const configObj = {\n        method: 'PATCH',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accepts\": \"application/json\"\n        },\n        body: JSON.stringify({\n          details: message.details + 1\n        })\n      };\n      fetch(`${url}/${id}`, configObj).then(res => res.json()).then(json => {\n        this.setState(prevState => {\n          const idx = prevState.messages.findIndex(t => json.id === t.id);\n          return {\n            messages: [...prevState.messages.slice(0, idx), json, ...prevState.messages.slice(idx + 1)]\n          };\n        });\n      });\n    };\n  }\n\n  makeMessageCards() {\n    return this.props.messages.map(message => /*#__PURE__*/_jsxDEV(MessageCard, {\n      increaseMessages: this.increaseMessages,\n      messgage: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 51\n    }, this));\n  }\n\n  componentDidMount() {\n    console.log(\"A\");\n    this.props.fetchMessages();\n    console.log(\"D\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"message-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(MessageForm, {\n          addMessage: this.addMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), this.props.loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"LOADING....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 38\n      }, this) : this.makeMessageCards()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const displayMessages = state.messages(message => message.detail.toLowerCase().includes(ownProps.searchTerm.toLowerCase()));\n  return {\n    messages: displayMessages,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchMessages: () => dispatch(fetchMessages())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessagesContainer);","map":{"version":3,"sources":["/Users/heather/Development/code/eikona/frontend/src/containers/MessagesContainer.js"],"names":["MessageCard","React","MessageForm","connect","fetchMessages","url","MessagesContainer","Component","addMessage","messageData","setState","prevState","prevProps","message","messages","increaseMessages","id","state","mewssages","find","t","configObj","method","headers","body","JSON","stringify","details","fetch","then","res","json","idx","findIndex","slice","makeMessageCards","props","map","componentDidMount","console","log","render","loading","mapStateToProps","ownProps","displayMessages","detail","toLowerCase","includes","searchTerm","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import MessageCard from '../components/MessageCard'\nimport React from 'react'\nimport MessageForm from '../components/MessageForm'\nimport {connect} from 'react-redux'\nimport {fetchMessages}  from '../actions/messageActions'\n\n\nconst url =\"http://localhost:3000/messages\"\n\nclass MessagesContainer extends React.Component{\n    \n    \n   \n    addMessage = (messageData) => {\n        this.setState((prevState, prevProps ) => {\n            return {\n                message: [...prevState.messages, messageData]\n            }\n        })\n    }\n\n    makeMessageCards(){\n\n        return this.props.messages.map(message => <MessageCard increaseMessages={this.increaseMessages} messgage={message} />)\n    }\n\n    increaseMessages = (id) => {\n        const message = this.state.mewssages.find((t)=> id === t.id)\n        const configObj = {\n            method: 'PATCH',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accepts\": \"application/json\"\n            },\n            body: JSON.stringify({details: message.details + 1})\n        }\n\n        fetch(`${url}/${id}`, configObj)\n        .then(res => res.json())\n        .then(json => {\n            this.setState((prevState) => {\n                 const idx = prevState.messages.findIndex((t)=> json.id === t.id)\n\n                return {\n                    messages: [...prevState.messages.slice(0,idx), json, ...prevState.messages.slice(idx + 1)]\n                }\n            })\n        })\n      \n    }\n\n    componentDidMount(){\n     \n      console.log(\"A\")\n      this.props.fetchMessages()\n      console.log(\"D\")\n    }\n\n    render(){\n        return(\n            <div id=\"message-container\">\n        \n                <div>\n                    <MessageForm addMessage={this.addMessage}/>\n                    <br></br>\n                </div>\n                \n               {this.props.loading ? <h1>LOADING....</h1> : this.makeMessageCards()}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n\n     const displayMessages = state.messages((message) =>\n        message.detail.toLowerCase().includes(ownProps.searchTerm.toLowerCase()))\n        \n    return {\n      messages: displayMessages,\n      loading: state.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchMessages: () => dispatch(fetchMessages())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessagesContainer)\n"]},"metadata":{},"sourceType":"module"}