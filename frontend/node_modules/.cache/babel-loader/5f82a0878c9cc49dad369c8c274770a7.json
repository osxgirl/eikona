{"ast":null,"code":"var _jsxFileName = \"/Users/heather/Development/code/eikona/frontend/src/containers/MessagesContainer.js\";\nimport MessageCard from '../components/MessageCard';\nimport React from 'react';\nimport MessageForm from '../components/MessageForm';\nimport { connect } from 'react-redux';\nimport { fetchMessages } from '../actions/messageActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ToysContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.addToy = toyData => {\n      // this.setState({toys: [...this.state.toys, toyData]})\n      // this.setState({toys: [...this.state.toys, toyData]})\n      // this.setState({toys: [...this.state.toys, toyData]})\n      // this.setState({toys: [...this.state.toys, toyData]})\n      this.setState((prevState, prevProps) => {\n        return {\n          toys: [...prevState.toys, toyData]\n        };\n      });\n    };\n\n    this.increaseLikes = id => {\n      const toy = this.state.toys.find(t => id === t.id);\n      const configObj = {\n        method: 'PATCH',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accepts\": \"application/json\"\n        },\n        body: JSON.stringify({\n          likes: toy.likes + 1\n        })\n      };\n      fetch(`${url}/${id}`, configObj).then(res => res.json()).then(json => {\n        this.setState(prevState => {\n          const idx = prevState.toys.findIndex(t => json.id === t.id);\n          return {\n            toys: [...prevState.toys.slice(0, idx), json, ...prevState.toys.slice(idx + 1)]\n          };\n        });\n      });\n    };\n  }\n\n  makeToyCards() {\n    return this.props.toys.map(toy => /*#__PURE__*/_jsxDEV(ToyCard, {\n      increaseLikes: this.increaseLikes,\n      toy: toy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 43\n    }, this)); // return displayedToys.map(toy => <ToyCard increaseLikes={this.increaseLikes} id={toy.id} name={toy.name} image={toy.image} likes={toy.likes} />)\n  }\n\n  componentDidMount() {\n    // where you make your fetch requests\n    console.log(\"A\");\n    this.props.fetchToys(); //async stuff happening here\n\n    console.log(\"D\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"message-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(MessageForm, {\n          addMessage: this.addMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), this.props.loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"LOADING....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 38\n      }, this) : this.makeMessageCards()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const displayMessages = state.messages.filter(message => message.detail.toLowerCase().includes(ownProps.searchTerm.toLowerCase()));\n  return {\n    messages: displayMessages,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchMessages: () => dispatch(fetchMessages())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessagesContainer);","map":{"version":3,"sources":["/Users/heather/Development/code/eikona/frontend/src/containers/MessagesContainer.js"],"names":["MessageCard","React","MessageForm","connect","fetchMessages","ToysContainer","Component","addToy","toyData","setState","prevState","prevProps","toys","increaseLikes","id","toy","state","find","t","configObj","method","headers","body","JSON","stringify","likes","fetch","url","then","res","json","idx","findIndex","slice","makeToyCards","props","map","componentDidMount","console","log","fetchToys","render","addMessage","loading","makeMessageCards","mapStateToProps","ownProps","displayMessages","messages","filter","message","detail","toLowerCase","includes","searchTerm","mapDispatchToProps","dispatch","MessagesContainer"],"mappings":"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","sourcesContent":["import MessageCard from '../components/MessageCard'\nimport React from 'react'\nimport MessageForm from '../components/MessageForm'\nimport {connect} from 'react-redux'\nimport {fetchMessages}  from '../actions/messageActions'\n\nclass ToysContainer extends React.Component{\n   \n    \n\n    addToy = (toyData) => {\n        // this.setState({toys: [...this.state.toys, toyData]})\n        // this.setState({toys: [...this.state.toys, toyData]})\n        // this.setState({toys: [...this.state.toys, toyData]})\n        // this.setState({toys: [...this.state.toys, toyData]})\n        this.setState((prevState, prevProps ) => {\n            return {\n                toys: [...prevState.toys, toyData]\n            }\n        })\n    }\n\n    makeToyCards(){\n\n        return this.props.toys.map(toy => <ToyCard increaseLikes={this.increaseLikes} toy={toy} />)\n        // return displayedToys.map(toy => <ToyCard increaseLikes={this.increaseLikes} id={toy.id} name={toy.name} image={toy.image} likes={toy.likes} />)\n    }\n\n    increaseLikes = (id) => {\n        const toy = this.state.toys.find((t)=> id === t.id)\n        const configObj = {\n            method: 'PATCH',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accepts\": \"application/json\"\n            },\n            body: JSON.stringify({likes: toy.likes + 1})\n        }\n\n        fetch(`${url}/${id}`, configObj)\n        .then(res => res.json())\n        .then(json => {\n            this.setState((prevState) => {\n                 const idx = prevState.toys.findIndex((t)=> json.id === t.id)\n\n                return {\n                    toys: [...prevState.toys.slice(0,idx), json, ...prevState.toys.slice(idx + 1)]\n                }\n            })\n        })\n      \n    }\n\n    componentDidMount(){\n      // where you make your fetch requests\n\n      console.log(\"A\")\n      this.props.fetchToys() //async stuff happening here\n      console.log(\"D\")\n    }\n\n   \n\n\n    render(){\n        return(\n            <div id=\"message-container\">\n        \n                <div>\n                    <MessageForm addMessage={this.addMessage}/>\n                    <br></br>\n                </div>\n                \n               {this.props.loading ? <h1>LOADING....</h1> : this.makeMessageCards()}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n\n     const displayMessages = state.messages.filter((message) =>\n        message.detail.toLowerCase().includes(ownProps.searchTerm.toLowerCase()))\n        \n    return {\n      messages: displayMessages,\n      loading: state.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchMessages: () => dispatch(fetchMessages())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessagesContainer)\n"]},"metadata":{},"sourceType":"module"}