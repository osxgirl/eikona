{"ast":null,"code":"var _jsxFileName = \"/Users/heather/Development/code/eikona/frontend/src/containers/MessagesContainer.js\";\nimport MessageCard from '../components/MessageCard';\nimport React from 'react';\nimport MessageForm from '../components/MessageForm';\nimport { connect } from 'react-redux';\nimport { fetchMessages } from '../actions/messageActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:3000\";\n\nclass MessagesContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      messages: [],\n      search: \"\"\n    };\n\n    this.addMessage = messageData => {\n      this.setState({\n        messages: [...this.state.messages, messageData]\n      });\n      this.setState({\n        messages: [...this.state.messages, messageData]\n      });\n      this.setState({\n        messages: [...this.state.messages, messageData]\n      });\n      this.setState({\n        messages: [...this.state.messages, messageData]\n      });\n    };\n\n    this.handleInputChange = e => {\n      const search = e.target.value;\n      this.setState({\n        search: search\n      });\n    };\n  }\n\n  makeMessageCards() {\n    let displayedMessages = this.props.messages;\n    console.log(this.state.search);\n\n    if (this.state.search) {\n      displayedMessages = this.props.messages.filter(message => message.detail.toLowerCase().includes(this.state.search.toLowerCase()));\n    }\n\n    return displayedMessages.map(message => /*#__PURE__*/_jsxDEV(MessageCard, {\n      message: message,\n      id: message.id,\n      detail: message.detail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 45\n    }, this));\n  }\n\n  componentDidMount() {\n    fetch(url).then(res => res.json()).then(json => {\n      this.props.setToys(json);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"message-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(MessageForm, {\n          addMessage: this.addMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }, this), this.makeMessageCards()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.messages\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setMessages: () => dispatch({\n      type: \"GOT MESSAGES\",\n      payload: messages\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessagesContainer);","map":{"version":3,"sources":["/Users/heather/Development/code/eikona/frontend/src/containers/MessagesContainer.js"],"names":["MessageCard","React","MessageForm","connect","fetchMessages","url","MessagesContainer","Component","state","messages","search","addMessage","messageData","setState","handleInputChange","e","target","value","makeMessageCards","displayedMessages","props","console","log","filter","message","detail","toLowerCase","includes","map","id","componentDidMount","fetch","then","res","json","setToys","render","mapStateToProps","mapDispatchToProps","dispatch","setMessages","type","payload"],"mappings":"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","sourcesContent":["import MessageCard from '../components/MessageCard'\nimport React from 'react'\nimport MessageForm from '../components/MessageForm'\nimport {connect} from 'react-redux'\nimport {fetchMessages}  from '../actions/messageActions'\n\nconst url =\"http://localhost:3000\"\n\nclass MessagesContainer extends React.Component{\n    \n    state = {\n    messages: [],\n    search: \"\"\n    }\n    \n    addMessage = (messageData) => {\n         this.setState({messages: [...this.state.messages, messageData]})\n         this.setState({messages: [...this.state.messages, messageData]})\n         this.setState({messages: [...this.state.messages, messageData]})\n         this.setState({messages: [...this.state.messages, messageData]})\n    }\n    makeMessageCards(){\n        let displayedMessages = this.props.messages\n        console.log(this.state.search)\n        if(this.state.search){\n            displayedMessages = this.props.messages.filter((message) => message.detail.toLowerCase().includes(this.state.search.toLowerCase()))\n    }\n    \n    return displayedMessages.map(message => <MessageCard message={message} id={message.id} detail={message.detail} />)\n    \n    }\n                         \n    componentDidMount(){\n        fetch(url)\n        .then(res => res.json())\n        .then(json => { this.props.setToys(json) })\n    }\n\n        \n    handleInputChange = (e) => {\n        const search = e.target.value\n        this.setState({search: search})\n    }\n        \n      render(){\n          return(\n              <div id=\"message-container\">\n                  <div>\n                      <MessageForm addMessage={this.addMessage}/>\n                      <br></br>\n                  </div>\n                 {this.makeMessageCards()}\n              </div>\n          )\n      }\n  }\nconst mapStateToProps = (state) => {\n   return {\n   messages: state.messages\n   }\n }\n const mapDispatchToProps = (dispatch) => {\n   return {\n   setMessages: () => dispatch({type: \"GOT MESSAGES\", payload: messages})\n   }\n }\nexport default connect(mapStateToProps, mapDispatchToProps)(MessagesContainer)\n"]},"metadata":{},"sourceType":"module"}