{"ast":null,"code":"var _jsxFileName = \"/Users/heather/Development/code/eikona/frontend/src/containers/MessagesContainer.js\";\nimport MessageCard from '../components/MessageCard';\nimport React, { Component } from 'react';\nimport MessageForm from '../components/MessageForm';\nimport { connect } from 'react-redux';\nimport { fetchToys } from '../actions/toyActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:3000/messages\";\n\nclass MessagesContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.addMessage = messageData => {\n      this.setState((prevState, prevProps) => {\n        return {\n          messages: [...prevState.messages, messageData]\n        };\n      });\n    };\n  }\n\n  makeMessageCards() {\n    return this.props.messages.map(message => /*#__PURE__*/_jsxDEV(MessageCard, {\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 51\n    }, this));\n  }\n\n  componentDidMount() {\n    console.log(\"A\");\n    this.props.fetchMessages();\n    console.log(\"D\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"toy-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(ToyForm, {\n          addToy: this.addToy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), this.props.loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"LOADING....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 38\n      }, this) : this.makeToyCards()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const displayMessages = state.messages.filter(message => message.name.toLowerCase().includes(ownProps.searchTerm.toLowerCase()));\n  return {\n    messages: displayMessages,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchMessages: () => dispatch(fetchMessages())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessagesContainer);","map":{"version":3,"sources":["/Users/heather/Development/code/eikona/frontend/src/containers/MessagesContainer.js"],"names":["MessageCard","React","Component","MessageForm","connect","fetchToys","url","MessagesContainer","addMessage","messageData","setState","prevState","prevProps","messages","makeMessageCards","props","map","message","componentDidMount","console","log","fetchMessages","render","addToy","loading","makeToyCards","mapStateToProps","state","ownProps","displayMessages","filter","name","toLowerCase","includes","searchTerm","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,2BAAxB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAyB,uBAAzB;;AAEA,MAAMC,GAAG,GAAE,gCAAX;;AAEA,MAAMC,iBAAN,SAAgCN,KAAK,CAACC,SAAtC,CAA+C;AAAA;AAAA;;AAAA,SAC3CM,UAD2C,GAC7BC,WAAD,IAAiB;AAC3B,WAAKC,QAAL,CAAc,CAACC,SAAD,EAAYC,SAAZ,KAA2B;AACpC,eAAO;AACHC,UAAAA,QAAQ,EAAE,CAAC,GAAGF,SAAS,CAACE,QAAd,EAAwBJ,WAAxB;AADP,SAAP;AAGH,OAJF;AAKF,KAP0C;AAAA;;AAQ3CK,EAAAA,gBAAgB,GAAE;AACd,WAAO,KAAKC,KAAL,CAAWF,QAAX,CAAoBG,GAApB,CAAwBC,OAAO,iBAAI,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA,YAAnC,CAAP;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,SAAKL,KAAL,CAAWM,aAAX;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD;;AAEDE,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,EAAE,EAAC,eAAR;AAAA,8BAEI;AAAA,gCACI,QAAC,OAAD;AAAS,UAAA,MAAM,EAAE,KAAKC;AAAtB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAOI,KAAKR,KAAL,CAAWS,OAAX,gBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAArB,GAA4C,KAAKC,YAAL,EAPhD;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AA9B0C;;AAgC/C,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,QAAMC,eAAe,GAAGF,KAAK,CAACd,QAAN,CAAeiB,MAAf,CAAuBb,OAAD,IAC9CA,OAAO,CAACc,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCL,QAAQ,CAACM,UAAT,CAAoBF,WAApB,EAApC,CADwB,CAAxB;AAGA,SAAO;AACLnB,IAAAA,QAAQ,EAAEgB,eADL;AAELL,IAAAA,OAAO,EAAEG,KAAK,CAACH;AAFV,GAAP;AAIH,CARD;;AAUA,MAAMW,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHf,IAAAA,aAAa,EAAE,MAAMe,QAAQ,CAACf,aAAa,EAAd;AAD1B,GAAP;AAGH,CAJD;;AAMA,eAAejB,OAAO,CAACsB,eAAD,EAAkBS,kBAAlB,CAAP,CAA6C5B,iBAA7C,CAAf","sourcesContent":["import MessageCard from '../components/MessageCard'\nimport React, { Component } from 'react';\nimport MessageForm from '../components/MessageForm'\nimport {connect} from 'react-redux'\nimport {fetchToys}  from '../actions/toyActions'\n\nconst url =\"http://localhost:3000/messages\"\n\nclass MessagesContainer extends React.Component{\n    addMessage = (messageData) => {\n       this.setState((prevState, prevProps ) => {\n            return {\n                messages: [...prevState.messages, messageData]\n            }\n        })\n    }\n    makeMessageCards(){\n        return this.props.messages.map(message => <MessageCard message={message} />)\n    }\n\n    componentDidMount(){\n      console.log(\"A\")\n      this.props.fetchMessages()\n      console.log(\"D\")\n    }\n\n    render(){\n        return(\n            <div id=\"toy-container\">\n        \n                <div>\n                    <ToyForm addToy={this.addToy}/>\n                    <br></br>\n                </div>\n                \n               {this.props.loading ? <h1>LOADING....</h1> : this.makeToyCards()}\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n    const displayMessages = state.messages.filter((message) =>\n    message.name.toLowerCase().includes(ownProps.searchTerm.toLowerCase()))\n                       \n    return {\n      messages: displayMessages,\n      loading: state.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchMessages: () => dispatch(fetchMessages())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessagesContainer)\n"]},"metadata":{},"sourceType":"module"}