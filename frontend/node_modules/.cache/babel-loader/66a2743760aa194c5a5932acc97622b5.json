{"ast":null,"code":"var _jsxFileName = \"/Users/heather/Development/code/eikona/frontend/src/containers/MessagesContainer.js\";\nimport MessageCard from '../components/MessageCard';\nimport React from 'react';\nimport MessageForm from '../components/MessageForm';\nimport { connect } from 'react-redux';\nimport { fetchMessages } from '../actions/messageActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MessagesContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.addMessage = messageData => {\n      this.setState((prevState, prevProps) => {\n        return {\n          messages: [...prevState.messages, messageData]\n        };\n      });\n    };\n\n    this.increaseLikes = id => {\n      const message = this.state.messages.find(t => id === t.id);\n      const configObj = {\n        method: 'PATCH',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accepts\": \"application/json\"\n        },\n        body: JSON.stringify({\n          likes: message.likes + 1\n        })\n      };\n      fetch(`${url}/${id}`, configObj).then(res => res.json()).then(json => {\n        this.setState(prevState => {\n          const idx = prevState.messages.findIndex(t => json.id === t.id);\n          return {\n            messages: [...prevState.messages.slice(0, idx), json, ...prevState.messages.slice(idx + 1)]\n          };\n        });\n      });\n    };\n  }\n\n  makeToyCards() {\n    return this.props.messages.map(message => /*#__PURE__*/_jsxDEV(MessageCard, {\n      increaseLikes: this.increaseLikes,\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 51\n    }, this));\n  }\n\n  componentDidMount() {\n    console.log(\"A\");\n    this.props.fetchMessages();\n    console.log(\"D\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"message-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(MessageForm, {\n          addMessage: this.addMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), this.props.loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"LOADING....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 38\n      }, this) : this.makeMessageCards()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const displayMessages = state.messages.filter(message => message.detail.toLowerCase().includes(ownProps.searchTerm.toLowerCase()));\n  return {\n    messages: displayMessages,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchMessages: () => dispatch(fetchMessages())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessagesContainer);","map":{"version":3,"sources":["/Users/heather/Development/code/eikona/frontend/src/containers/MessagesContainer.js"],"names":["MessageCard","React","MessageForm","connect","fetchMessages","MessagesContainer","Component","addMessage","messageData","setState","prevState","prevProps","messages","increaseLikes","id","message","state","find","t","configObj","method","headers","body","JSON","stringify","likes","fetch","url","then","res","json","idx","findIndex","slice","makeToyCards","props","map","componentDidMount","console","log","render","loading","makeMessageCards","mapStateToProps","ownProps","displayMessages","filter","detail","toLowerCase","includes","searchTerm","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import MessageCard from '../components/MessageCard'\nimport React from 'react'\nimport MessageForm from '../components/MessageForm'\nimport {connect} from 'react-redux'\nimport {fetchMessages}  from '../actions/messageActions'\n\nclass MessagesContainer extends React.Component{\n   \n    addMessage = (messageData) => {\n      this.setState((prevState, prevProps ) => {\n            return {\n                messages: [...prevState.messages, messageData]\n            }\n        })\n    }\n\n    makeToyCards(){\n        return this.props.messages.map(message => <MessageCard increaseLikes={this.increaseLikes} message={message} />)\n    }\n\n    increaseLikes = (id) => {\n        const message = this.state.messages.find((t)=> id === t.id)\n        const configObj = {\n            method: 'PATCH',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accepts\": \"application/json\"\n            },\n            body: JSON.stringify({likes: message.likes + 1})\n        }\n\n        fetch(`${url}/${id}`, configObj)\n        .then(res => res.json())\n        .then(json => {\n            this.setState((prevState) => {\n                 const idx = prevState.messages.findIndex((t)=> json.id === t.id)\n\n                return {\n                    messages: [...prevState.messages.slice(0,idx), json, ...prevState.messages.slice(idx + 1)]\n                }\n            })\n        })\n    }\n\n    componentDidMount(){\n      console.log(\"A\")\n      this.props.fetchMessages()\n      console.log(\"D\")\n    }\n\n    render(){\n        return(\n            <div id=\"message-container\">\n        \n                <div>\n                    <MessageForm addMessage={this.addMessage}/>\n                    <br></br>\n                </div>\n                \n               {this.props.loading ? <h1>LOADING....</h1> : this.makeMessageCards()}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n\n     const displayMessages = state.messages.filter((message) =>\n        message.detail.toLowerCase().includes(ownProps.searchTerm.toLowerCase()))\n        \n    return {\n      messages: displayMessages,\n      loading: state.loading\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchMessages: () => dispatch(fetchMessages())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessagesContainer)\n"]},"metadata":{},"sourceType":"module"}