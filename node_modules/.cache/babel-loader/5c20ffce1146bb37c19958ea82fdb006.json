{"ast":null,"code":"var _jsxFileName = \"/Users/heather/Development/code/eikona/src/components/Counter.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      time: 0,\n      color: \"#\" + Math.floor(Math.random() * 16777215).toString(16)\n    };\n\n    this.clockTick = () => {\n      this.setState(prevState => ({\n        time: prevState.time + 1\n      }));\n    };\n\n    this.stopClock = () => {\n      clearInterval(this.interval);\n    };\n\n    this.handleClose = () => {\n      this.props.removeTimer(this.props.id);\n    };\n  }\n\n  // add your code here\n  componentDidMount() {\n    this.interval = setInterval(this.clockTick, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const {\n      time,\n      color\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"Counter\",\n      style: {\n        background: color\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.stopClock,\n        children: \"\\uD83D\\uDED1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"mountText\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        onClick: this.handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  } //clock functions\n\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/heather/Development/code/eikona/src/components/Counter.js"],"names":["React","Component","Counter","state","time","color","Math","floor","random","toString","clockTick","setState","prevState","stopClock","clearInterval","interval","handleClose","props","removeTimer","id","componentDidMount","setInterval","componentWillUnmount","render","background"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BE,KAD8B,GACtB;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,KAAK,EAAE,MAAMC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,EAAqCC,QAArC,CAA8C,EAA9C;AAFP,KADsB;;AAAA,SA4B9BC,SA5B8B,GA4BlB,MAAM;AAChB,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BR,QAAAA,IAAI,EAAEQ,SAAS,CAACR,IAAV,GAAiB;AADG,OAAL,CAAvB;AAGD,KAhC6B;;AAAA,SAkC9BS,SAlC8B,GAkClB,MAAM;AAChBC,MAAAA,aAAa,CAAC,KAAKC,QAAN,CAAb;AACD,KApC6B;;AAAA,SAuC9BC,WAvC8B,GAuChB,MAAM;AAClB,WAAKC,KAAL,CAAWC,WAAX,CAAuB,KAAKD,KAAL,CAAWE,EAAlC;AACD,KAzC6B;AAAA;;AAM9B;AACAC,EAAAA,iBAAiB,GAAI;AACnB,SAAKL,QAAL,GAAgBM,WAAW,CAAC,KAAKX,SAAN,EAAiB,IAAjB,CAA3B;AACD;;AAEDY,EAAAA,oBAAoB,GAAI;AACtBR,IAAAA,aAAa,CAAC,KAAKC,QAAN,CAAb;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEnB,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkB,KAAKF,KAA7B;AACA,wBACE;AAAS,MAAA,SAAS,EAAC,SAAnB;AAA6B,MAAA,KAAK,EAAE;AAAEqB,QAAAA,UAAU,EAAEnB;AAAd,OAApC;AAAA,8BACE;AAAA,kBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,KAAKS,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,SAAS,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAO,QAAA,OAAO,EAAE,KAAKG;AAArB;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GAzB6B,CA2B9B;;;AA3B8B;;AA4ChC,eAAed,OAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Counter extends Component {\n  state = {\n    time: 0,\n    color: \"#\" + Math.floor(Math.random() * 16777215).toString(16)\n  };\n\n  // add your code here\n  componentDidMount () {\n    this.interval = setInterval(this.clockTick, 1000)\n  }\n\n  componentWillUnmount () {\n    clearInterval(this.interval)\n  }\n    \n  render() {\n    const { time, color } = this.state;\n    return (\n      <section className=\"Counter\" style={{ background: color }}>\n        <h1>{time}</h1>\n        <button onClick={this.stopClock}>ðŸ›‘</button>\n        <aside className=\"mountText\"></aside>\n        <small onClick={this.handleClose}></small>\n      </section>\n    );\n  }\n\n  //clock functions\n  clockTick = () => {\n    this.setState(prevState => ({\n      time: prevState.time + 1\n    }));\n  };\n\n  stopClock = () => {\n    clearInterval(this.interval);\n  };\n\n  // for the 'x' button,\n  handleClose = () => {\n    this.props.removeTimer(this.props.id);\n  };\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}