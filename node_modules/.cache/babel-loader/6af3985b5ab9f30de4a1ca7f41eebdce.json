{"ast":null,"code":"var url=\"http://localhost:3000/api/v1/messages\";export var addMessage=function addMessage(message){return{type:\"ADDED_MESSAGE\",payload:message};};export var setMessages=function setMessages(messages){return{type:\"GOT_MESSAGES\",payload:messages};};export var fetchMessages=function fetchMessages(){return function(dispatch){dispatch({type:\"LOADING\"});fetch(url).then(function(res){return res.json();}).then(function(json){// instead of setState, we need to dispatch an action\ndispatch(setMessages(json));// dispatching an action to the reducer\nconsole.log(\"F\");});console.log(\"C\");// responsible for dispatching the setToys action\n};};export var createMessage=function createMessage(message){return function(dispatch){var configObj={method:'POST',headers:{\"Content-Type\":\"application/json\",\"Accepts\":\"application/json\"},body:JSON.stringify(message)};fetch(url,configObj).then(function(res){return res.json();}).then(function(json){dispatch(addMessage(json));});};};","map":{"version":3,"sources":["/Users/heather/Development/code/eikona/src/actions/messageActions.js"],"names":["url","addMessage","message","type","payload","setMessages","messages","fetchMessages","dispatch","fetch","then","res","json","console","log","createMessage","configObj","method","headers","body","JSON","stringify"],"mappings":"AAAA,GAAMA,CAAAA,GAAG,CAAG,uCAAZ,CAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,OAAD,QAAc,CAAEC,IAAI,CAAE,eAAR,CAAyBC,OAAO,CAAEF,OAAlC,CAAd,EAAnB,CACP,MAAO,IAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,QAAD,QAAe,CAACH,IAAI,CAAE,cAAP,CAAuBC,OAAO,CAAEE,QAAhC,CAAf,EAApB,CAGP,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC/B,MAAO,UAACC,QAAD,CAAc,CACbA,QAAQ,CAAC,CAACL,IAAI,CAAE,SAAP,CAAD,CAAR,CACAM,KAAK,CAACT,GAAD,CAAL,CACCU,IADD,CACM,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADT,EAECF,IAFD,CAEM,SAAAE,IAAI,CAAI,CACV;AACAJ,QAAQ,CAACH,WAAW,CAACO,IAAD,CAAZ,CAAR,CAA4B;AAC5BC,OAAO,CAACC,GAAR,CAAY,GAAZ,EACH,CAND,EAOAD,OAAO,CAACC,GAAR,CAAY,GAAZ,EACA;AACH,CAXL,CAYC,CAbE,CAeP,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACb,OAAD,CAAa,CACvC,MAAO,UAACM,QAAD,CAAc,CAChB,GAAMQ,CAAAA,SAAS,CAAG,CACdC,MAAM,CAAE,MADM,CAEdC,OAAO,CAAE,CACL,eAAgB,kBADX,CAEL,UAAW,kBAFN,CAFK,CAMdC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAenB,OAAf,CANQ,CAAlB,CAQAO,KAAK,CAACT,GAAD,CAAMgB,SAAN,CAAL,CACCN,IADD,CACM,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADT,EAECF,IAFD,CAEM,SAAAE,IAAI,CAAI,CACVJ,QAAQ,CAACP,UAAU,CAACW,IAAD,CAAX,CAAR,CACH,CAJD,EAKH,CAdF,CAeF,CAhBM","sourcesContent":["const url = \"http://localhost:3000/api/v1/messages\"\n\nexport const addMessage = (message) => ({ type: \"ADDED_MESSAGE\", payload: message });\nexport const setMessages = (messages) => ({type: \"GOT_MESSAGES\", payload: messages});\n\n\nexport const fetchMessages = () => {\n    return (dispatch) => {\n            dispatch({type: \"LOADING\"})\n            fetch(url)\n            .then(res => res.json())\n            .then(json => {\n                // instead of setState, we need to dispatch an action\n                dispatch(setMessages(json)) // dispatching an action to the reducer\n                console.log(\"F\")\n            })\n            console.log(\"C\")\n            // responsible for dispatching the setToys action\n        }\n    }\n\nexport const createMessage = (message) => {\n   return (dispatch) => {\n        const configObj = {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accepts\": \"application/json\"\n            },\n            body: JSON.stringify(message)\n        }\n        fetch(url, configObj)\n        .then(res => res.json())\n        .then(json => {\n            dispatch(addMessage(json))\n        })\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}