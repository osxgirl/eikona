{"ast":null,"code":"import _toConsumableArray from\"/Users/heather/Development/code/eikona/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/heather/Development/code/eikona/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var messageReducer=function messageReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{messages:[],loading:false};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"GOT_MESSAGES\":console.log(\"E\");return _objectSpread(_objectSpread({},state),{},{messages:action.payload,loading:true});case\"ADDED_MESSAGES\":return _objectSpread(_objectSpread({},state),{},{messages:[].concat(_toConsumableArray(state.messages),[action.payload])});case\"REMOVE_MESSAGE\":return _objectSpread(_objectSpread({},state),{},{messages:[].concat(_toConsumableArray(state.messages),[action.payload])});case\"LOADING\":return _objectSpread(_objectSpread({},state),{},{loading:false});default:return state;}};export default messageReducer;","map":{"version":3,"sources":["/Users/heather/Development/code/eikona/src/reducers/messageReducer.js"],"names":["messageReducer","state","messages","loading","action","type","console","log","payload"],"mappings":"iUAAA,GAAMA,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAsD,IAArDC,CAAAA,KAAqD,2DAA7C,CAAEC,QAAQ,CAAE,EAAZ,CAAgBC,OAAO,CAAE,KAAzB,CAA6C,IAAXC,CAAAA,MAAW,2CACzE,OAAOA,MAAM,CAACC,IAAd,EACI,IAAK,cAAL,CACIC,OAAO,CAACC,GAAR,CAAY,GAAZ,EACA,sCAAWN,KAAX,MAAkBC,QAAQ,CAAEE,MAAM,CAACI,OAAnC,CAA4CL,OAAO,CAAE,IAArD,GACJ,IAAK,gBAAL,CACI,sCAAYF,KAAZ,MAAmBC,QAAQ,8BAAMD,KAAK,CAACC,QAAZ,GAAsBE,MAAM,CAACI,OAA7B,EAA3B,GACJ,IAAK,gBAAL,CACI,sCAAYP,KAAZ,MAAmBC,QAAQ,8BAAMD,KAAK,CAACC,QAAZ,GAAsBE,MAAM,CAACI,OAA7B,EAA3B,GACJ,IAAK,SAAL,CACI,sCAAYP,KAAZ,MAAmBE,OAAO,CAAE,KAA5B,GACJ,QACI,MAAOF,CAAAA,KAAP,CAXR,CAaH,CAdD,CAgBA,cAAeD,CAAAA,cAAf","sourcesContent":["const messageReducer = (state = { messages: [], loading: false }, action) => {\n    switch(action.type){\n        case \"GOT_MESSAGES\":\n            console.log(\"E\")\n            return {...state, messages: action.payload, loading: true}\n        case \"ADDED_MESSAGES\":\n            return { ...state, messages: [...state.messages, action.payload] }\n        case \"REMOVE_MESSAGE\":\n            return { ...state, messages: [...state.messages, action.payload] }\n        case \"LOADING\":\n            return  {...state, loading: false }\n        default:\n            return state\n    }\n}\n\nexport default messageReducer\n"]},"metadata":{},"sourceType":"module"}